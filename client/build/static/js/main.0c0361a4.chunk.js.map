{"version":3,"sources":["logo.svg","components/DashBoard.js","components/PetForm.js","components/EditPet.js","components/PetDetails.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","DashBoard","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","axios","get","then","res","setState","pets","data","sortType","catch","err","console","log","toConsumableArray","state","arr","key","i","length","j","temp","bubbleSort","react_default","a","createElement","react_router_dom","to","map","pet","_id","name","type","Component","PetForm","changeName","e","objectSpread","target","value","changeType","changeDescription","description","changeSkills1","skills","changeSkills2","changeSkills3","changeLikes","likes","create","preventDefault","post","errors","history","push","cancel","onSubmit","onChange","className","message","onClick","EditPet","concat","match","params","update","put","PetDetails","delete","like","refs","setAttribute","skill","index","ref","App","react_router","exact","path","component","ActivityForm","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0c0361a4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nfunction bubbleSort(arr, key) {\n    for(let i=0; i<arr.length-1; i++){\n        for(let j=0; j<arr.length-1-i; j++){\n            if(arr[j][key] > arr[j+1][key]){\n                let temp = arr[j];\n                arr[j] = arr[j+1];\n                arr[j+1] = temp;\n            }\n        }\n    }\n    return arr;\n}\n\nclass DashBoard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            pets: []\n        }\n    }\n\n    componentDidMount = () => {\n        axios.get(\"http://localhost:8000/pets\")\n            .then(res => {\n                this.setState({pets: res.data.pets}, () => {\n                    this.sortType();\n                });\n            }).catch(err => {\n                console.log(err);\n            });\n    }\n\n    sortType = () => {\n        let pets = [...this.state.pets];\n        pets = bubbleSort(pets, \"type\");\n        this.setState({pets: pets});\n    }\n\n    render() {\n        return (\n            <div>\n                <h3>These pets are looking for a home!</h3>\n                <p><Link to=\"/pet/new\">Add a pet to the shelter</Link></p>\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Type</th>\n                            <th>Actions</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            this.state.pets.map( pet => \n                                <tr key={pet._id}>\n                                    <td>{pet.name}</td>\n                                    <td>{pet.type}</td>\n                                    <td>\n                                        <Link \n                                            to={\"/pet/\" + pet._id + \"/details\"}>\n                                            <button>Details</button>\n                                        </Link>\n                                        <Link \n                                            to={\"/pet/\" + pet._id + \"/edit\"}>\n                                            <button>Edit</button>\n                                        </Link>\n                                    </td>\n                                </tr>    \n                            )\n                        }\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default DashBoard;","import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass PetForm extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            pet: {\n                name: \"\",\n                type: \"\",\n                description: \"\",\n                skills: [\"\",\"\",\"\"],\n                likes: 0\n            },\n            errors: {}\n        }\n    }\n\n    changeName = (e) => {\n        this.setState({pet: {...this.state.pet, name: e.target.value}});\n    }\n\n    changeType = (e) => {\n        this.setState({pet: {...this.state.pet, type: e.target.value}});\n    }\n\n    changeDescription = (e) => {\n        this.setState({pet: {...this.state.pet, description: e.target.value}});\n    }\n\n    changeSkills1 = (e) => {\n        let skills = [...this.state.pet.skills];\n        skills[0] = e.target.value;\n        this.setState({pet: {...this.state.pet, skills: skills}});\n    }\n\n    changeSkills2 = (e) => {\n        let skills = [...this.state.pet.skills];\n        skills[1] = e.target.value;\n        this.setState({pet: {...this.state.pet, skills: skills}});\n    }\n\n    changeSkills3 = (e) => {\n        let skills = [...this.state.pet.skills];\n        skills[2] = e.target.value;\n        this.setState({pet: {...this.state.pet, skills: skills}});\n    }\n\n    changeLikes = (e) => {\n        this.setState({pet: {...this.state.pet, likes: e.target.value}});\n    }\n\n    create = (e) => {\n        e.preventDefault();\n        axios.post(\"http://localhost:8000/pets\", this.state.pet)\n            .then(res => {\n                if(res.data.errors){\n                    this.setState({errors: res.data.errors.errors});\n                    console.log(this.state);\n                } else {\n                    this.props.history.push(\"/\");\n                }\n            }).catch(err => {\n                console.log(err);\n            });\n    }\n\n    cancel = (e) => {\n        e.preventDefault();\n        this.props.history.push('/');\n    }\n    \n    render() {\n        return (\n            <div>\n                <h3>Know of a pet needing a home?</h3>\n                <p>The pet must have a name</p>\n                <form onSubmit={this.create}>\n                    <table><tbody>\n                        <tr>\n                            <td>Pet Name:</td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <input type=\"text\" onChange={this.changeName} />\n                                {\n                                    (this.state.errors.name) ? \n                                    <span className=\"error\">&nbsp;{this.state.errors.name.message}</span> :\n                                    <span></span>\n                                }\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Pet Type:</td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <input type=\"text\" onChange={this.changeType} />\n                                {\n                                    (this.state.errors.type) ? \n                                    <span className=\"error\">&nbsp;{this.state.errors.type.message}</span> :\n                                    <span></span>\n                                }\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Description:</td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <input type=\"text\" onChange={this.changeDescription} />\n                                {\n                                    (this.state.errors.description) ? \n                                    <span className=\"error\">&nbsp;{this.state.errors.description.message}</span> :\n                                    <span></span>\n                                }\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Skills:</td>\n                        </tr>\n                        <tr><td><table><tbody>\n                            <tr>\n                                <td>Skill 1:</td>\n                                <td>\n                                    <input type=\"text\" onChange={this.changeSkills1} />\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Skill 2:</td>\n                                <td>\n                                    <input type=\"text\" onChange={this.changeSkills2} />\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Skill 3:</td>\n                                <td>\n                                    <input type=\"text\" onChange={this.changeSkills3} />\n                                </td>\n                            </tr>\n                        </tbody></table></td></tr>\n                    </tbody></table>\n                    <button type=\"submit\">Add Pet</button>\n                </form>\n                <button onClick={this.cancel}>Cancel</button>\n            </div>\n        );\n    }\n}\n\nexport default PetForm;","import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass EditPet extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            pet: {\n                name: \"\",\n                type: \"\",\n                skills: [],\n                likes: 0\n            },\n            errors: {}\n        }\n    }\n\n    componentDidMount = () => {\n        axios.get(`http://localhost:8000/pets/${this.props.match.params._id}`)\n            .then(res => {\n                this.setState({pet: res.data.pet});\n            }).catch(err => {\n                console.log(err);\n            })\n    }\n\n    changeName = (e) => {\n        this.setState({pet: {...this.state.pet, name: e.target.value}});\n    }\n\n    changeType = (e) => {\n        this.setState({pet: {...this.state.pet, type: e.target.value}});\n    }\n\n    changeDescription = (e) => {\n        this.setState({pet: {...this.state.pet, description: e.target.value}});\n    }\n\n    changeSkills1 = (e) => {\n        let skills = [...this.state.pet.skills];\n        skills[0] = e.target.value;\n        this.setState({pet: {...this.state.pet, skills: skills}});\n    }\n\n    changeSkills2 = (e) => {\n        let skills = [...this.state.pet.skills];\n        skills[1] = e.target.value;\n        this.setState({pet: {...this.state.pet, skills: skills}});\n    }\n\n    changeSkills3 = (e) => {\n        let skills = [...this.state.pet.skills];\n        skills[2] = e.target.value;\n        this.setState({pet: {...this.state.pet, skills: skills}});\n    }\n\n    update = (e) => {\n        e.preventDefault();\n        console.log(this.state);\n        axios.put(`http://localhost:8000/pets/${this.props.match.params._id}`, this.state.pet)\n            .then(res => {\n                if(res.data.errors){\n                    this.setState({errors: res.data.errors.errors});\n                } else {\n                    this.props.history.push('/');\n                }\n            }).catch(err => {\n                console.log(err);\n            });\n    }\n\n    cancel = (e) => {\n        e.preventDefault();\n        this.props.history.push('/');\n    }\n\n    render() {\n        return (\n            <div>\n                <h3>Edit This Pet</h3>\n                <form onSubmit={this.update}>\n                    <table><tbody>\n                        <tr>\n                            <td>Pet Name:</td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <input type=\"text\" onChange={this.changeName} value={this.state.pet.name} />\n                                {\n                                    (this.state.errors.name) ? \n                                    <span className=\"error\">&nbsp;{this.state.errors.name.message}</span> :\n                                    <span></span>\n                                }\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Pet Type:</td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <input type=\"text\" onChange={this.changeType} value={this.state.pet.type} />\n                                {\n                                    (this.state.errors.type) ? \n                                    <span className=\"error\">&nbsp;{this.state.errors.type.message}</span> :\n                                    <span></span>\n                                }\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Description:</td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <input type=\"text\" onChange={this.changeDescription} value={this.state.pet.description} />\n                                {\n                                    (this.state.errors.description) ? \n                                    <span className=\"error\">&nbsp;{this.state.errors.description.message}</span> :\n                                    <span></span>\n                                }\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Skills:</td>\n                        </tr>\n                        <tr><td><table><tbody>\n                            <tr>\n                                <td>Skill 1:</td>\n                                <td>\n                                    <input type=\"text\" onChange={this.changeSkills1} value={this.state.pet.skills[0]} />\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Skill 2:</td>\n                                <td>\n                                    <input type=\"text\" onChange={this.changeSkills2} value={this.state.pet.skills[1]} />\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Skill 3:</td>\n                                <td>\n                                    <input type=\"text\" onChange={this.changeSkills3} value={this.state.pet.skills[2]} />\n                                </td>\n                            </tr>\n                        </tbody></table></td></tr>\n                    </tbody></table>\n                    <button type=\"submit\">Update Pet</button>\n                </form>\n                <button onClick={this.cancel}>Cancel</button>\n            </div>\n        )\n    }\n}\n\nexport default EditPet;","import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass PetDetails extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            pet: {\n                name: \"\",\n                type: \"\",\n                skills: [],\n                likes: 0\n            },\n            errors: {}\n        }\n    }\n\n    componentDidMount = () => {\n        axios.get(`http://localhost:8000/pets/${this.props.match.params._id}`)\n            .then(res => {\n                this.setState({pet: res.data.pet});\n            }).catch(err => {\n                console.log(err);\n            })\n    }\n\n    delete = (e) => {\n        axios.delete(`http://localhost:8000/pets/${this.props.match.params._id}`)\n            .then(res => {\n                this.props.history.push('/');\n            }).catch(err => {\n                console.log(err);\n            });\n    }\n\n    update = (e) => {\n        axios.put(`http://localhost:8000/pets/${this.props.match.params._id}`, this.state.pet)\n    }\n\n    like = (e) => {\n        this.setState({pet: {...this.state.pet, likes: (this.state.pet.likes+1)}}, this.update);\n        this.refs.like.setAttribute(\"disabled\", \"disabled\");\n    }\n\n    render() {\n        return (\n            <div>\n                <h3>Details about {this.state.pet.name}</h3>\n                <table><tbody>\n                    <tr>\n                        <td>Pet Type: </td>\n                        <td>{this.state.pet.type}</td>\n                    </tr>\n                    <tr>\n                        <td>Description: </td>\n                        <td>{this.state.pet.description}</td>\n                    </tr>\n                    <tr>\n                        <td>Skills: </td>\n                        <td>\n                        {\n                            this.state.pet.skills.map( (skill, index) => \n                                <div key={index}>\n                                    <p>{skill}</p>\n                                </div>\n                            )\n                        }\n                        </td>\n                    </tr>\n                    <tr>\n                        <td></td>\n                        <td></td>\n                    </tr>\n                    </tbody>\n                    Likes: {this.state.pet.likes}\n                </table>\n                <button ref=\"like\" onClick={this.like}>Like this Pet</button>\n                <button onClick={this.delete}>Adopt this pet!</button>\n            </div>\n        )\n    }\n}\n\nexport default PetDetails;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport \"react-router\";\nimport { Link, BrowserRouter, Route } from 'react-router-dom';\nimport DashBoard from './components/DashBoard';\nimport ActivityForm from './components/PetForm';\nimport EditPet from './components/EditPet';\nimport PetDetails from './components/PetDetails';\n\nfunction App() {\n  return (\n    <div>\n      <h1>Pet Shelter</h1>\n      <BrowserRouter>\n        <Route exact path=\"/\" component={DashBoard} />\n        <Route path=\"/pet/new\" component={ActivityForm} />\n        <Route path=\"/pet/:_id/edit\" component={EditPet} />\n        <Route path=\"/pet/:_id/details\" component={PetDetails} />\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}